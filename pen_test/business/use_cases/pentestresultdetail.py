from concurrent.futures import ThreadPoolExecutor
from typing import List
from uuid import UUID

from infrastructure.framework import db
from infrastructure.framework.models import PenTestVulnerability, PentestAnomalies, Website
from infrastructure.repository.anomalies_repos import AnomaliesRepository
from infrastructure.repository.vulnerability_repos import VulnerabilityRepository
from infrastructure.repository.website_repository import WebsiteRepository
from pen_test.business.use_cases.pentest import PentTestRun


def launch_pentest(website_id: UUID):
    website_repo = WebsiteRepository(db, Website)
    vul_repo = VulnerabilityRepository(db, PenTestVulnerability)
    anomaly_repo = AnomaliesRepository(db, PentestAnomalies)
    website = website_repo.find(website_id)
    pen_test = PentTestRun(
        website_repo,
        vul_repo,
        anomaly_repo,
        website.url,
        website.name
    )
    pen_test.run()


def scan_list_website(websites: List[UUID], threads=1):
    with ThreadPoolExecutor(max_workers=threads) as executor:
        futures = {
            executor.submit(launch_pentest, website): website
            for website in websites
        }
