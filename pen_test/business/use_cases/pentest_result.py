from dataclasses import dataclass
from typing import List
from uuid import UUID

from pen_test.business.entity import AnomaliesEntity
from pen_test.business.interfaces.ianomalies_repos import IAnomaliesRepository
from pen_test.business.interfaces.ipen_test import IPenTestResult
from pen_test.business.interfaces.ivulnerability import IVulnerability
from pen_test.business.interfaces.ivulnerability_repos import \
    IVulnerabilityRepository


@dataclass
class PenTestResult(IPenTestResult):
    _vul_repo: IVulnerabilityRepository
    _anomaly_repo: IAnomaliesRepository
    # _website_repo: IWebsiteRepository
    _url: str = ""

    def get_vul_by_uuid(self, uuid: UUID) -> IVulnerability:
        return self._vul_repo.find(uuid)

    # def get_vul_by_website(self, website: UUID) -> IVulnerability:
    #     website = self._website_repo.find_by_url(self._url)
    #     return self._vul_repo.find_by_website(website.uuid)

    def get_anomaly_by_uuid(self, uuid: UUID) -> AnomaliesEntity:
        return self._anomaly_repo.find(uuid)

    # def get_anomaly_by_website(self, website: UUID) -> AnomaliesEntity:
    #     website = self._website_repo.find_by_url(self._url)
    #     return self._anomaly_repo.find_by_website(website.uuid)

    def list_anomaly(self) -> List[AnomaliesEntity]:
        return self._anomaly_repo.list()

    def list_vul(self) -> List[IVulnerability]:
        return self._vul_repo.list()
